C51 COMPILER V9.52.0.0   EXTI                                                              04/07/2016 20:21:53 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EXTI
OBJECT MODULE PLACED IN Exti.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE Exti.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          /*************  功能说明  **************
  16          
  17          本文件为STC15xxx系列的外中断初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
  18          
  19          ******************************************/
  20          
  21          
  22          
  23          #include  "Exti.h"
  24          
  25          
  26          /********************* INT0中断函数 *************************/
  27          void Ext_INT0 (void) interrupt INT0_VECTOR    //进中断时已经清除标志
  28          {
  29   1      //  P00 = ~P00;
  30   1        stop();
*** WARNING C206 IN LINE 30 OF Exti.c: 'stop': missing function-prototype
  31   1      }
  32          
  33          /********************* INT1中断函数 *************************/
  34          void Ext_INT1 (void) interrupt INT1_VECTOR    //进中断时已经清除标志
  35          {
  36   1      //  P01 = ~P01;
  37   1      }
  38          
  39          /********************* INT2中断函数 *************************/
  40          void Ext_INT2 (void) interrupt INT2_VECTOR  //
  41          {
  42   1      //  P02 = ~P02;
  43   1      }
  44          
  45          /********************* INT3中断函数 *************************/
  46          void Ext_INT3 (void) interrupt INT3_VECTOR
  47          {
  48   1      //  P03 = ~P03;
  49   1      }
  50          
  51          /********************* INT4中断函数 *************************/
  52          void Ext_INT4 (void) interrupt INT4_VECTOR
  53          {
  54   1      //  P04 = ~P04;
C51 COMPILER V9.52.0.0   EXTI                                                              04/07/2016 20:21:53 PAGE 2   

  55   1      }
  56          
  57          //========================================================================
  58          // 函数: u8 Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  59          // 描述: 外部中断初始化程序.
  60          // 参数: INTx: 结构参数,请参考Exti.h里的定义.
  61          // 返回: 成功返回0, 空操作返回1,错误返回2.
  62          // 版本: V1.0, 2012-10-22
  63          //========================================================================
  64          u8  Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  65          {
  66   1        if(EXT >  EXT_INT4) return 1; //空操作
  67   1        
  68   1        if(EXT == EXT_INT0) //外中断0
  69   1        {
  70   2          if(INTx->EXTI_Interrupt == ENABLE)    EX0 = 1;  //允许中断
  71   2          else                  EX0 = 0;  //禁止中断
  72   2          if(INTx->EXTI_Polity == PolityHigh)   PX0 = 1;  //高优先级中断
  73   2          else                  PX0 = 0;  //低优先级中断
  74   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT0 = 1;  //下降沿中断
  75   2          else                  IT0 = 0;  //上升,下降沿中断
  76   2          return  0;    //成功
  77   2        }
  78   1      
  79   1        if(EXT == EXT_INT1) //外中断1
  80   1        {
  81   2          if(INTx->EXTI_Interrupt == ENABLE)    EX1 = 1;  //允许中断
  82   2          else                  EX1 = 0;  //禁止中断
  83   2          if(INTx->EXTI_Polity == PolityHigh)   PX1 = 1;  //高优先级中断
  84   2          else                  PX1 = 0;  //低优先级中断
  85   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT1 = 1;  //下降沿中断
  86   2          else                  IT1 = 0;  //上升,下降沿中断
  87   2          return  0;    //成功
  88   2        }
  89   1      
  90   1        if(EXT == EXT_INT2)   //外中断2, 固定为下降沿低优先级中断
  91   1        {
  92   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 4);  //允许中断  
  93   2          else                INT_CLKO &= ~(1 << 4);  //禁止中断
  94   2          return  0;    //成功
  95   2        }
  96   1      
  97   1        if(EXT == EXT_INT3)   //外中断3, 固定为下降沿低优先级中断
  98   1        {
  99   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 5);  //允许中断  
 100   2          else                INT_CLKO &= ~(1 << 5);  //禁止中断
 101   2          return  0;    //成功
 102   2        }
 103   1      
 104   1        if(EXT == EXT_INT4)   //外中断4, 固定为下降沿低优先级中断
 105   1        {
 106   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 6);  //允许中断  
 107   2          else                INT_CLKO &= ~(1 << 6);  //禁止中断
 108   2          return  0;    //成功
 109   2        }
 110   1        return 2; //失败
 111   1      }
 112          void  EXTI_config(void)
 113          {
 114   1        EXTI_InitTypeDef  EXTI_InitStructure;         //结构定义
 115   1      
 116   1        EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;  //中断模式,   EXT_MODE_RiseFall, EXT_MODE_Fall
C51 COMPILER V9.52.0.0   EXTI                                                              04/07/2016 20:21:53 PAGE 3   

 117   1        EXTI_InitStructure.EXTI_Polity    = PolityHigh;     //中断优先级,   PolityLow,PolityHigh
 118   1        EXTI_InitStructure.EXTI_Interrupt = ENABLE;       //中断允许,     ENABLE或DISABLE
 119   1        Ext_Inilize(EXT_INT0,&EXTI_InitStructure);        //初始化INT0  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 120   1      
 121   1      //  EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;  //中断模式,   EXT_MODE_RiseFall, EXT_MODE_Fall
 122   1      //  EXTI_InitStructure.EXTI_Polity    = PolityLow;      //中断优先级,   PolityLow,PolityHigh
 123   1      //  EXTI_InitStructure.EXTI_Interrupt = ENABLE;       //中断允许,     ENABLE或DISABLE
 124   1      //  Ext_Inilize(EXT_INT1,&EXTI_InitStructure);        //初始化INT1  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 125   1      
 126   1      //  Ext_Inilize(EXT_INT2,&EXTI_InitStructure);        //初始化INT2  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 127   1      //  Ext_Inilize(EXT_INT3,&EXTI_InitStructure);        //初始化INT3  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 128   1      //  Ext_Inilize(EXT_INT4,&EXTI_InitStructure);        //初始化INT4  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 129   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
